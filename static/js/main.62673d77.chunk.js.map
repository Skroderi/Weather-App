{"version":3,"sources":["components/Form.js","components/Result.js","components/App.js","serviceWorker.js","index.js"],"names":["Form","props","react_default","a","createElement","Fragment","onSubmit","submit","type","value","onChange","change","placeholder","onClick","location","className","Result","_props$data$current$","data","current","date","city","temp","img","country","humidity","description","pressure","wind","error","errorMsg","weather","src","alt","forecast","time","day","ApiKey","App","state","inputValue","sunrise","sunset","latitude","longitude","handleInputChange","e","_this","setState","target","handleInputSubmit","preventDefault","Api","concat","ForecastApi","days","alert","fetch","then","response","ok","Error","json","Date","toLocaleString","name","sys","main","toFixed","speed","icon","toUpperCase","catch","console","log","list","dt","getHours","getUTCDay","handleGetLocation","navigator","geolocation","getCurrentPosition","position","coords","_this2","this","_this3","currentGeoApi","forecastGeoApi","src_components_Form","show","showFormLoc","src_components_Result","Component","Boolean","window","hostname","match","ReactDOM","render","src_components_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62673d77.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Form.css';\r\nconst Form = (props) => {\r\n    return (\r\n        <>\r\n            <form onSubmit={props.submit}>\r\n                <input type=\"text\" value={props.value} onChange={props.change} placeholder=\"ENTER CITY\" />\r\n                <br />\r\n                <button>Search</button>\r\n            </form>\r\n            <button onClick={props.location} className=\"locationBtn\">Get Location</button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport './Result.css'\r\n\r\nconst Result = (props) => {\r\n    const { date, city, temp, img, country, humidity, description, pressure, wind, error } = props.data.current[0]\r\n\r\n    // const dataa = new Date(props.data.forecast[0].time * 1000).getHours();\r\n    // console.log(dataa);\r\n    const errorMsg = (\r\n        <div>\r\n            <h4>Niestety nie mamy w bazie miasta {city}.</h4>\r\n        </div>\r\n    )\r\n    let weather = null\r\n    if (!error && city) {\r\n        weather = (\r\n            <div className=\"main\">\r\n                <div className=\"first\">\r\n                    <div className=\"city\"> <h2>{city}, {country}</h2>\r\n                        <p><strong>{date}</strong></p>\r\n                    </div>\r\n\r\n                    <div className=\"temp\">\r\n                        <img src={img} alt=\"zdjęcie obrazujące pogode\" />\r\n                        <h1>{temp} &#8451;</h1>\r\n\r\n                    </div>\r\n                    <p>{description}</p>\r\n                    <div className='parametrs'>\r\n                        <div className=\"humidity other\">  Wilgotność: <h4>{humidity}</h4>\r\n                        </div>\r\n                        <div className=\"pressure other\"> Ciśnienie: <h4>{pressure}</h4>\r\n                        </div>\r\n                        <div className=\"wind other\"> Wiatr:<h4>{wind}</h4>\r\n                        </div >\r\n                    </div>\r\n                </div>\r\n                <div className='box' >\r\n                    <div className=\"box-content\" >\r\n                        <div className=\"panel\">\r\n                            <div className=\"hourDay\">\r\n                                <div className=\"hour\">{props.data.forecast[0].time}</div>\r\n                                <div className=\"day\">{props.data.forecast[0].day}</div>\r\n                            </div>\r\n                            <div className=\"tempForecast\"> {props.data.forecast[0].temp} &#8451;</div>\r\n                            <div className=\"icon\"><img src={props.data.forecast[0].img} alt=\"zdjęcie obrazujące pogode\" /></div>\r\n                        </div>\r\n                        <div className=\"panel\">\r\n                            <div className=\"hourDay\">\r\n                                <div className=\"hour\">{props.data.forecast[1].time}</div>\r\n                                <div className=\"day\">{props.data.forecast[1].day}</div>\r\n                                <div className=\"tempForecast\"> {props.data.forecast[1].temp} &#8451;</div>\r\n                                <div className=\"icon\"><img src={props.data.forecast[1].img} alt=\"zdjęcie obrazujące pogode\" /></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"panel\">\r\n                            <div className=\"hourDay\">\r\n                                <div className=\"hour\">{props.data.forecast[2].time}</div>\r\n                                <div className=\"day\">{props.data.forecast[2].day}</div>\r\n                                <div className=\"tempForecast\"> {props.data.forecast[2].temp} &#8451;</div>\r\n                                <div className=\"icon\"><img src={props.data.forecast[2].img} alt=\"zdjęcie obrazujące pogode\" /></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"panel\">\r\n                            <div className=\"hourDay\">\r\n                                <div className=\"hour\">{props.data.forecast[3].time}</div>\r\n                                <div className=\"day\">{props.data.forecast[3].day}</div>\r\n                                <div className=\"tempForecast\"> {props.data.forecast[3].temp} &#8451;</div>\r\n                                <div className=\"icon\"><img src={props.data.forecast[3].img} alt=\"zdjęcie obrazujące pogode\" /></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"panel\">\r\n                            <div className=\"hourDay\">\r\n                                <div className=\"hour\">{props.data.forecast[4].time}</div>\r\n                                <div className=\"day\">{props.data.forecast[4].day}</div>\r\n                                <div className=\"tempForecast\"> {props.data.forecast[4].temp} &#8451;</div>\r\n                                <div className=\"icon\"><img src={props.data.forecast[4].img} alt=\"zdjęcie obrazujące pogode\" /></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"panel\">\r\n                            <div className=\"hourDay\">\r\n                                <div className=\"hour\">{props.data.forecast[5].time}</div>\r\n                                <div className=\"day\">{props.data.forecast[5].day}</div>\r\n                                <div className=\"tempForecast\"> {props.data.forecast[5].temp} &#8451;</div>\r\n                                <div className=\"icon\"><img src={props.data.forecast[5].img} alt=\"zdjęcie obrazujące pogode\" /></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"panel\">\r\n                            <div className=\"hourDay\">\r\n                                <div className=\"hour\">{props.data.forecast[6].time}</div>\r\n                                <div className=\"day\">{props.data.forecast[6].day}</div>\r\n                                <div className=\"tempForecast\"> {props.data.forecast[6].temp} &#8451;</div>\r\n                                <div className=\"icon\"><img src={props.data.forecast[6].img} alt=\"zdjęcie obrazujące pogode\" /></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"panel\">\r\n                            <div className=\"hourDay\">\r\n                                <div className=\"hour\">{props.data.forecast[7].time}</div>\r\n                                <div className=\"day\">{props.data.forecast[7].day}</div>\r\n                                <div className=\"tempForecast\"> {props.data.forecast[7].temp} &#8451;</div>\r\n                                <div className=\"icon\"><img src={props.data.forecast[7].img} alt=\"zdjęcie obrazujące pogode\" /></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {error ? errorMsg : weather}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Result;","import React, { Component } from 'react';\nimport Form from './Form';\nimport Result from './Result'\nimport './App.css';\n\n\n// http://api.openweathermap.org/data/2.5/forecast?q=piła&appid=6a0340dcb344a8dd70d4b2361b8ea65b&units=metric\nconst ApiKey = '6a0340dcb344a8dd70d4b2361b8ea65b'\n// api.openweathermap.org/data/2.5/weather?lat=54.4366596&lon=18.5722921&appid=6a0340dcb344a8dd70d4b2361b8ea65b\n\nclass App extends Component {\n  state = {\n    current: [\n      {\n        inputValue: '',\n        date: '',\n        city: '',\n        sunrise: '',\n        sunset: '',\n        temp: '',\n        pressure: '',\n        wind: '',\n        img: [],\n        country: '',\n        humidity: '',\n        description: '',\n        error: false\n      }\n    ],\n    forecast: [\n      { time: '', temp: '', img: [], day: '' },\n      { time: '', temp: '', img: [], day: '' },\n      { time: '', temp: '', img: [], day: '' },\n      { time: '', temp: '', img: [], day: '' },\n      { time: '', temp: '', img: [], day: '' },\n      { time: '', temp: '', img: [], day: '' },\n      { time: '', temp: '', img: [], day: '' },\n      { time: '', temp: '', img: [], day: '' },\n    ],\n    latitude: ``,\n    longitude: ``,\n  }\n\n\n\n  handleInputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n\n  handleInputSubmit = (e) => {\n    e.preventDefault()\n    const Api = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.inputValue}&appid=${ApiKey}&units=metric`\n    const ForecastApi = `https://api.openweathermap.org/data/2.5/forecast?q=${this.state.inputValue}&appid=${ApiKey}&units=metric`\n    // const currentGeoApi = `http://api.openweathermap.org/data/2.5/weather?lat=${this.state.latitude}&lon=${this.state.longitude}&appid=${ApiKey}&units=metric`\n\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    if (!this.state.inputValue) return alert('Wprowadź miasto!')\n\n    fetch(Api)\n      .then(response => {\n        if (response.ok) return response\n        throw Error('Błąd')\n      })\n      .then(response => response.json())\n      // .then(result => console.log(result))\n      .then(data => {\n        // console.log(data);\n\n        const time = new Date().toLocaleString()\n        this.setState(({\n          current: [\n            {\n              inputValue: \"\",\n              error: false,\n              date: time,\n              city: data.name,\n              sunrise: data.sys.sunrise,\n              sunset: data.sys.sunset,\n              temp: data.main.temp.toFixed(1),\n              pressure: `${data.main.pressure} hPa`,\n              wind: `${(data.wind.speed * 3.6).toFixed(1)}  km/h`,\n              img: `https://openweathermap.org/img/w/${data.weather[0].icon}.png`,\n              country: data.sys.country,\n              humidity: `${data.main.humidity}%`,\n              description: data.weather[0].description.toUpperCase(),\n            }]\n        }))\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          current: [{\n            error: true,\n            city: this.state.inputValue\n          }]\n        })\n      })\n\n\n    fetch(ForecastApi)\n      .then(response => {\n        if (response.ok) return response\n        throw Error('Błąd')\n      }\n      )\n      .then(response => response.json())\n      // .then(response => console.log(response))\n      .then(data => {\n\n        this.setState({\n          forecast: [\n            {\n              time: new Date(data.list[0].dt * 1000).getHours() + ':00',\n              day: days[new Date(data.list[0].dt * 1000).getUTCDay()],\n              temp: data.list[0].main.temp,\n              img: `https://openweathermap.org/img/w/${data.list[0].weather[0].icon}.png`,\n            },\n            {\n              time: new Date(data.list[1].dt * 1000).getHours() + ':00',\n              day: days[new Date(data.list[1].dt * 1000).getUTCDay()],\n              temp: data.list[1].main.temp,\n              img: `https://openweathermap.org/img/w/${data.list[1].weather[0].icon}.png`,\n            },\n            {\n              time: new Date(data.list[2].dt * 1000).getHours() + ':00',\n              day: days[new Date(data.list[2].dt * 1000).getUTCDay()],\n              temp: data.list[2].main.temp,\n              img: `https://openweathermap.org/img/w/${data.list[2].weather[0].icon}.png`,\n            },\n            {\n              time: new Date(data.list[3].dt * 1000).getHours() + ':00',\n              day: days[new Date(data.list[3].dt * 1000).getUTCDay()],\n              temp: data.list[3].main.temp,\n              img: `https://openweathermap.org/img/w/${data.list[3].weather[0].icon}.png`,\n            },\n            {\n              time: new Date(data.list[4].dt * 1000).getHours() + ':00',\n              day: days[new Date(data.list[4].dt * 1000).getUTCDay()],\n              temp: data.list[4].main.temp,\n              img: `https://openweathermap.org/img/w/${data.list[4].weather[0].icon}.png`,\n            },\n            {\n              time: new Date(data.list[5].dt * 1000).getHours() + ':00',\n              day: days[new Date(data.list[5].dt * 1000).getUTCDay()],\n              temp: data.list[5].main.temp,\n              img: `https://openweathermap.org/img/w/${data.list[5].weather[0].icon}.png`,\n            },\n            {\n              time: new Date(data.list[6].dt * 1000).getHours() + ':00',\n              day: days[new Date(data.list[6].dt * 1000).getUTCDay()],\n              temp: data.list[6].main.temp,\n              img: `https://openweathermap.org/img/w/${data.list[6].weather[0].icon}.png`,\n            },\n            {\n              time: new Date(data.list[7].dt * 1000).getHours() + ':00',\n              day: days[new Date(data.list[7].dt * 1000).getUTCDay()],\n              temp: data.list[7].main.temp,\n              img: `https://openweathermap.org/img/w/${data.list[7].weather[0].icon}.png`,\n            },\n          ]\n        })\n\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          current: [{\n            error: true,\n            city: this.state.inputValue\n          }]\n        })\n      })\n  }\n  handleGetLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.setState({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        })\n      });\n    }\n    else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  }\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.setState({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        })\n      });\n    }\n    else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n\n    // if (this.state.longitude) {\n    //   this.showFormLoc()\n    // }\n  }\n  componentDidUpdate() {\n    const currentGeoApi = `https://api.openweathermap.org/data/2.5/weather?lat=${this.state.latitude}&lon=${this.state.longitude}&appid=${ApiKey}&units=metric`\n    const forecastGeoApi = `https://api.openweathermap.org/data/2.5/forecast?lat=${this.state.latitude}&lon=${this.state.longitude}&appid=${ApiKey}&units=metric`\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    if (this.state.latitude && this.state.longitude) {\n      fetch(currentGeoApi)\n        .then(response => {\n          if (response.ok) return response\n          throw Error('Błąd')\n        })\n        .then(response => response.json())\n        // .then(result => console.log(result))\n        .then(data => {\n          // console.log(data);\n          const time = new Date().toLocaleString()\n          this.setState({\n            current: [\n              {\n                inputValue: \"\",\n                error: false,\n                date: time,\n                city: data.name,\n                sunrise: data.sys.sunrise,\n                sunset: data.sys.sunset,\n                temp: data.main.temp.toFixed(1),\n                pressure: `${data.main.pressure} hPa`,\n                wind: `${(data.wind.speed * 3.6).toFixed(1)}  km/h`,\n                img: `https://openweathermap.org/img/w/${data.weather[0].icon}.png`,\n                country: data.sys.country,\n                humidity: `${data.main.humidity}%`,\n                description: data.weather[0].description.toUpperCase(),\n              }],\n            latitude: '',\n            longitude: '',\n          })\n        })\n        .catch(error => {\n          console.log(error)\n        })\n\n\n      fetch(forecastGeoApi)\n        .then(response => {\n          if (response.ok) return response\n          throw Error('Błąd')\n        }\n        )\n        .then(response => response.json())\n        // .then(response => console.log(response))\n        .then(data => {\n          this.setState({\n            forecast: [\n              {\n                time: new Date(data.list[0].dt * 1000).getHours() + ':00',\n                day: days[new Date(data.list[0].dt * 1000).getUTCDay()],\n                temp: data.list[0].main.temp,\n                img: `https://openweathermap.org/img/w/${data.list[0].weather[0].icon}.png`,\n              },\n              {\n                time: new Date(data.list[1].dt * 1000).getHours() + ':00',\n                day: days[new Date(data.list[1].dt * 1000).getUTCDay()],\n                temp: data.list[1].main.temp,\n                img: `https://openweathermap.org/img/w/${data.list[1].weather[0].icon}.png`,\n              },\n              {\n                time: new Date(data.list[2].dt * 1000).getHours() + ':00',\n                day: days[new Date(data.list[2].dt * 1000).getUTCDay()],\n                temp: data.list[2].main.temp,\n                img: `https://openweathermap.org/img/w/${data.list[2].weather[0].icon}.png`,\n              },\n              {\n                time: new Date(data.list[3].dt * 1000).getHours() + ':00',\n                day: days[new Date(data.list[3].dt * 1000).getUTCDay()],\n                temp: data.list[3].main.temp,\n                img: `https://openweathermap.org/img/w/${data.list[3].weather[0].icon}.png`,\n              },\n              {\n                time: new Date(data.list[4].dt * 1000).getHours() + ':00',\n                day: days[new Date(data.list[4].dt * 1000).getUTCDay()],\n                temp: data.list[4].main.temp,\n                img: `https://openweathermap.org/img/w/${data.list[4].weather[0].icon}.png`,\n              },\n              {\n                time: new Date(data.list[5].dt * 1000).getHours() + ':00',\n                day: days[new Date(data.list[5].dt * 1000).getUTCDay()],\n                temp: data.list[5].main.temp,\n                img: `https://openweathermap.org/img/w/${data.list[5].weather[0].icon}.png`,\n              },\n              {\n                time: new Date(data.list[6].dt * 1000).getHours() + ':00',\n                day: days[new Date(data.list[6].dt * 1000).getUTCDay()],\n                temp: data.list[6].main.temp,\n                img: `https://openweathermap.org/img/w/${data.list[6].weather[0].icon}.png`,\n              },\n              {\n                time: new Date(data.list[7].dt * 1000).getHours() + ':00',\n                day: days[new Date(data.list[7].dt * 1000).getUTCDay()],\n                temp: data.list[7].main.temp,\n                img: `https://openweathermap.org/img/w/${data.list[7].weather[0].icon}.png`,\n              },\n            ]\n          })\n\n        })\n        .catch(error => {\n          console.log(error)\n          this.setState({\n            current: [{\n              error: true,\n              city: this.state.inputValue\n            }]\n          })\n        })\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Weather App</h1>\n        <Form\n          value={this.state.current.inputValue}\n          change={this.handleInputChange}\n          submit={this.handleInputSubmit}\n          location={this.handleGetLocation}\n          show={this.showFormLoc} />\n        <Result data={this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}